@model IEnumerable<ControlPanel.DataAccess.Entities.LimitIdDescriptionDirectory>

@{
    ViewBag.Title = "Справочник лимитов";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Измените при необходимости
}

<h2>@ViewBag.Title</h2>

<!-- Кнопка "Добавить лимит" -->
<div class="mb-3">
    <button id="btnAddLimit" class="btn btn-primary">Добавить лимит</button>
</div>

<table class="table table-striped table-bordered" id="limitsTable">
    <thead>
        <tr>
            <th>LimitCode</th>
            <th>Наименование</th>
            <th>Описание (RU)</th>
            <th>Описание (KG)</th>
            <th>Описание (EN)</th>
            <th style="width:150px;">Действия</th>
        </tr>
    </thead>
    <tbody>
    @if (Model != null && Model.Any())
    {
        foreach (var limit in Model)
        {
            <tr data-limit-id="@limit.Id" class="limit-id">
                <td class="limit-code">@limit.LimitCode</td>
                <td class="limit-name">@limit.Name</td>
                <td class="limit-description-ru">@limit.DescriptionRu</td>
                <td class="limit-description-kg">@limit.DescriptionKg</td>
                <td class="limit-description-en">@limit.DescriptionEn</td>
                <td>
                    <button class="btn btn-sm btn-secondary btn-edit" title="Редактировать">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                    <button class="btn btn-sm btn-danger btn-delete" title="Удалить">
                        <i class="bi bi-trash-fill"></i>
                    </button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="6">Лимиты не найдены.</td>
        </tr>
    }
    </tbody>
</table>

<!-- Модальное окно для добавления/редактирования лимита -->
<div class="modal fade" id="limitModal" tabindex="-1" aria-labelledby="limitModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="limitForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="limitModalLabel">Добавить лимит</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <!-- Если LimitId используется как внешний идентификатор из внешней системы, его можно редактировать,
                         иначе, если он генерируется БД, его можно сделать readonly -->
                    <div class="mb-3">
                        <input type="hidden" class="form-control" id="limitId" name="Id" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="limitCode" class="form-label">LimitCode</label>
                        <input type="number" class="form-control" id="limitCode" name="Code" required>
                    </div>
                    <div class="mb-3">
                        <label for="limitName" class="form-label">Наименование</label>
                        <input type="text" class="form-control" id="limitName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="limitDescriptionRu" class="form-label">Описание (RU)</label>
                        <textarea class="form-control" id="limitDescriptionRu" name="DescriptionRu" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="limitDescriptionKg" class="form-label">Описание (KG)</label>
                        <textarea class="form-control" id="limitDescriptionKg" name="DescriptionKg"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="limitDescriptionEn" class="form-label">Описание (EN)</label>
                        <textarea class="form-control" id="limitDescriptionEn" name="DescriptionEn"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary" id="btnSaveLimit">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Инициализируем модальное окно Bootstrap
            var limitModal = new bootstrap.Modal(document.getElementById('limitModal'), { keyboard: false });
            var editing = false;
            var editingRow = null;
            
            // Обработчик кнопки "Добавить лимит"
            $('#btnAddLimit').click(function () {
                editing = false;
                editingRow = null;
                $('#limitModalLabel').text('Добавить лимит');
                $('#limitForm')[0].reset();
                // При добавлении можно разрешить редактировать поле LimitId
                $('#limitId').prop('disabled', false);
                limitModal.show();
            });
            
            // Обработчик кнопки "Редактировать" внутри строки
            $('#limitsTable').on('click', '.btn-edit', function () {
                editing = true;
                editingRow = $(this).closest('tr');
                // Используем data() для получения id
                var id = editingRow.data('limit-id');
                var code = editingRow.find('.limit-code').text().trim();
                var name = editingRow.find('.limit-name').text().trim();
                var descriptionRu = editingRow.find('.limit-description-ru').text().trim();
                var descriptionKg = editingRow.find('.limit-description-kg').text().trim();
                var descriptionEn = editingRow.find('.limit-description-en').text().trim();

                $('#limitModalLabel').text('Редактировать лимит');
                $('#limitId').val(id); // скрытое поле
                $('#limitCode').val(code);
                $('#limitName').val(name);
                $('#limitDescriptionRu').val(descriptionRu);
                $('#limitDescriptionKg').val(descriptionKg);
                $('#limitDescriptionEn').val(descriptionEn);
                limitModal.show();
            });
            
            $('#limitForm').submit(function (e) {
                e.preventDefault();
                var formData = {
                    Id: $('#limitId').val(),
                    LimitCode: $('#limitCode').val(),
                    Name: $('#limitName').val(),
                    DescriptionRu: $('#limitDescriptionRu').val(),
                    DescriptionKg: $('#limitDescriptionKg').val(),
                    DescriptionEn: $('#limitDescriptionEn').val()
                };
                var url = '';
                if (editing) {
                    url = '@Url.Action("Edit", "LimitIdDescriptionDirectories")';
                } else {
                    url = '@Url.Action("Create", "LimitIdDescriptionDirectories")';
                }
                
                $.ajax({
                    url: url,
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.success) {
                            if (editing) {
                                // Обновляем строку таблицы
                                editingRow.find('.limit-name').text(formData.Name);
                                editingRow.find('.limit-code').text(formData.LimitCode);
                                editingRow.find('.limit-description-ru').text(formData.DescriptionRu);
                                editingRow.find('.limit-description-kg').text(formData.DescriptionKg);
                                editingRow.find('.limit-description-en').text(formData.DescriptionEn);
                            } else {
                                // Добавляем новую строку в таблицу
                                var newRow = `<tr data-limit-id="${formData.Id}" class="limit-id">
                                    <td class="limit-code">${formData.LimitCode}</td>
                                    <td class="limit-name">${formData.Name}</td>
                                    <td class="limit-description-ru">${formData.DescriptionRu}</td>
                                    <td class="limit-description-kg">${formData.DescriptionKg}</td>
                                    <td class="limit-description-en">${formData.DescriptionEn}</td>
                                    <td>
                                        <button class="btn btn-sm btn-secondary btn-edit" title="Редактировать">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger btn-delete" title="Удалить">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>`;
                                $('#limitsTable tbody').append(newRow);
                            }
                            limitModal.hide();
                            showToast("Действие выполнено успешно!", 'success');
                        } else {
                            showToast(response.message, 'danger');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                        showToast('Ошибка при сохранении.', 'danger');
                    }
                });
            });
            
            // Обработка удаления лимита
            $('#limitsTable').on('click', '.btn-delete', function () {
                if (!confirm('Вы уверены, что хотите удалить этот лимит?')) return;
                var row = $(this).closest('tr');
                var id = row.data('limit-id'); // получаем значение из data-атрибута строки
                $.ajax({
                    url: '@Url.Action("Delete", "LimitIdDescriptionDirectories")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ id: id }),
                    success: function (response) {
                        if (response.success) {
                            row.remove();
                            showToast("Лимит успешно удален", 'success');
                        } else {
                            showToast(response.message, 'danger');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                        showToast('Ошибка при удалении.', 'danger');
                    }
                });
            });
            
            // Функция для вывода уведомлений (toast)
            function showToast(message, type) {
                var toastContainer = $('#toastContainer');
                if (toastContainer.length === 0) {
                    toastContainer = $('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3"></div>');
                    $('body').append(toastContainer);
                }
                var toast = $(`
                    <div class="toast align-items-center text-bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `);
                toastContainer.append(toast);
                var bsToast = new bootstrap.Toast(toast[0], { delay: 3000 });
                bsToast.show();
                toast.on('hidden.bs.toast', function () {
                    toast.remove();
                });
            }
        });
    </script>
}
