@model IEnumerable<ControlPanel.DataAccess.Entities.Currency>

@{
    ViewBag.Title = "Справочник валют";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Измените путь, если требуется
}

<h2>@ViewBag.Title</h2>

<!-- Кнопка "Добавить валюту" -->
<div class="mb-3">
    <button id="btnAddCurrency" class="btn btn-primary">Добавить валюту</button>
</div>

<table class="table table-striped table-bordered" id="currenciesTable">
    <thead>
    <tr>
        <th>Код валюты</th>
        <th>Название валюты</th>
        <th>Символ валюты</th>
        <th style="width: 150px;">Действия</th>
    </tr>
    </thead>
    <tbody>
    @if (Model != null && Model.Any())
    {
        foreach (var currency in Model)
        {
            <tr data-currency-code="@currency.CurrencyCode">
                <td class="currency-code">@currency.CurrencyCode</td>
                <td class="currency-name">@currency.CurrencyName</td>
                <td class="currency-symbol">@currency.CurrencySymbol</td>
                <td>
                    <button class="btn btn-sm btn-secondary btn-edit" title="Редактировать">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                    <button class="btn btn-sm btn-danger btn-delete" title="Удалить">
                        <i class="bi bi-trash-fill"></i>
                    </button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="4">Валюты не найдены.</td>
        </tr>
    }
    </tbody>
</table>

<!-- Модальное окно для добавления/редактирования валюты -->
<div class="modal fade" id="currencyModal" tabindex="-1" aria-labelledby="currencyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="currencyForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="currencyModalLabel">Добавить валюту</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="currencyCode" class="form-label">Код валюты</label>
                        <input type="number" class="form-control" id="currencyCode" name="CurrencyCode" required>
                    </div>
                    <div class="mb-3">
                        <label for="currencyName" class="form-label">Название валюты</label>
                        <input type="text" class="form-control" id="currencyName" name="CurrencyName" required>
                    </div>
                    <div class="mb-3">
                        <label for="currencySymbol" class="form-label">Символ валюты</label>
                        <input type="text" class="form-control" id="currencySymbol" name="CurrencySymbol" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary" id="btnSaveCurrency">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var currencyModal = new bootstrap.Modal(document.getElementById('currencyModal'), {
                keyboard: false
            });
            var editing = false;
            var editingRow = null;

            $('#btnAddCurrency').click(function () {
                editing = false;
                editingRow = null;
                $('#currencyModalLabel').text('Добавить валюту');
                $('#currencyForm')[0].reset();
                $('#currencyCode').prop('disabled', false);
                currencyModal.show();
            });

            $('#currenciesTable').on('click', '.btn-edit', function () {
                editing = true;
                editingRow = $(this).closest('tr');
                var code = editingRow.find('.currency-code').text().trim();
                var name = editingRow.find('.currency-name').text().trim();
                var symbol = editingRow.find('.currency-symbol').text().trim();

                $('#currencyModalLabel').text('Редактировать валюту');
                $('#currencyCode').val(code).prop('disabled', true);
                $('#currencyName').val(name);
                $('#currencySymbol').val(symbol);
                currencyModal.show();
            });

            $('#currencyForm').submit(function (e) {
                e.preventDefault();
                var formData = {
                    CurrencyCode: $('#currencyCode').val(),
                    CurrencyName: $('#currencyName').val(),
                    CurrencySymbol: $('#currencySymbol').val()
                };
                var url = '';
                if (editing) {
                    // Для редактирования – вызываем действие Edit
                    url = '@Url.Action("Edit", "Currencies")';
                } else {
                    // Для добавления – вызываем действие Create
                    url = '@Url.Action("Create", "Currencies")';
                }
                $.ajax({
                    url: url,
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.success) {
                            if (editing) {
                                // Обновление строки таблицы
                                editingRow.find('.currency-name').text(formData.CurrencyName);
                                editingRow.find('.currency-symbol').text(formData.CurrencySymbol);
                            } else {
                                // Добавление новой строки в таблицу
                                var newRow = `<tr data-currency-code="${formData.CurrencyCode}">
                                    <td class="currency-code">${formData.CurrencyCode}</td>
                                    <td class="currency-name">${formData.CurrencyName}</td>
                                    <td class="currency-symbol">${formData.CurrencySymbol}</td>
                                    <td>
                                        <button class="btn btn-sm btn-secondary btn-edit" title="Редактировать">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger btn-delete" title="Удалить">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>`;

                                $('#currenciesTable tbody').append(newRow);
                            }
                            currencyModal.hide();
                            showToast("Действие выполнено успешно!", 'success');
                        } else {
                            showToast(response.message, 'danger');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                        showToast('Ошибка при сохранении.', 'danger');
                    }
                });
            });

            // Обработка удаления
            $('#currenciesTable').on('click', '.btn-delete', function () {
                if (!confirm('Вы уверены, что хотите удалить эту валюту?')) return;
                var row = $(this).closest('tr');
                var code = parseInt(row.data('currencyCode'), 10);
                $.ajax({
                    url: '@Url.Action("Delete", "Currencies")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({currencyCode: code}),
                    success: function (response) {
                        if (response.success) {
                            row.remove();
                            showToast("Валюта успешно удалена", 'success');
                        } else {
                            showToast(response.message, 'danger');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                        showToast('Ошибка при удалении.', 'danger');
                    }
                });
            });

            // Функция для вывода уведомлений (toast)
            function showToast(message, type) {
                var toastContainer = $('#toastContainer');
                if (toastContainer.length === 0) {
                    toastContainer = $('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3"></div>');
                    $('body').append(toastContainer);
                }
                var toast = $(`
                <div class="toast align-items-center text-bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                  <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                  </div>
                </div>
            `);
                toastContainer.append(toast);
                var bsToast = new bootstrap.Toast(toast[0], {delay: 3000});
                bsToast.show();
                toast.on('hidden.bs.toast', function () {
                    toast.remove();
                });
            }
        });
    </script>
}
